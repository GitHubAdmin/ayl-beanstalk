#!/usr/bin/env ruby
require 'optparse'

BASE_EXIT_CODE = 64
NO_APP_PATH_SPECIFIED = BASE_EXIT_CODE + 0

BEANSTALK_TUBE_DEFAULT = 'default'
APP_REQUIRE_DEFAULT = 'config/environment'
RAILS_ENVIRONMENT_DEFAULT = 'production'


options = {}

optparse = OptionParser.new do | opts |
  
  # Set a banner, displayed at the top of the help screen.
  opts.banner = "Usage: #{$0} [options]"

  options[:tube] = BEANSTALK_TUBE_DEFAULT
  opts.on '-t', '--tube TUBE', "Specify the beanstalk tube to listen to. Default (#{BEANSTALK_TUBE_DEFAULT})." do |tube|
    options[:tube] = tube
  end

  options[:env] = RAILS_ENVIRONMENT_DEFAULT
  opts.on '-e', '--environment ENVIRONMENT', "Specify the Rails environment to use" do |environment|
    options[:env] = environment
  end

  options[:app_path] = nil
  opts.on '-a', '--app-path APP_PATH', "Specify the path to the rails app" do |app_path|
    options[:app_path] = app_path
  end

  options[:rails_app] = false
  opts.on '-r', '--rails', "Indicate that we are starting a rails application" do 
    options[:rails_app] = true
  end

  options[:app_require] = APP_REQUIRE_DEFAULT
  opts.on '-c', '--require APP_REQUIRE', "The file to require when the worker starts up" do | app_require |
    options[:app_require] = app_require
  end

  opts.on '-h', '--help', 'Display the help message' do
    puts opts
    exit(0)
  end
end

optparse.parse!

if options[:app_path].nil?
  puts "Must specify an application path"
  exit(NO_APP_PATH_SPECIFIED)
end

if options[:rails_app]
  require 'rails' 
  ENV['RAILS_ENV'] = options[:env]
end

require File.join(options[:app_path], options[:app_require])

Ayl::MessageOptions.default_queue_name = options[:tube]

worker = Ayl::Engine.get_active_engine.worker
worker.eval_binding = binding

worker.process_messages
